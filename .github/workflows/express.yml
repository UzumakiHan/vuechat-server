# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Express App

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    
    - name: Deploy to Server # 执行部署任务
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest 
      with:
          host: ${{ secrets.SERVER_HOST }}
          user: ${{ secrets.SERVER_USER }}
          pass: ${{ secrets.SERVER_PASS }}

          # 由于网路情况，很容易超时，设置为60s
          connect_timeout: 60s
          first_ssh: |
             ls -la
          # 将工作目录下的文件全部拷贝到部署服务器的工作目录
          scp: |
            ./bin => /home/HHJ/nodeProject/vuechat-server
            ./views => /home/HHJ/nodeProject/vuechat-server
            ./db => /home/HHJ/nodeProject/vuechat-server
            ./routes => /home/HHJ/nodeProject/vuechat-server
            ./app.config.js => /home/HHJ/nodeProject/vuechat-server
            ./app.js => /home/HHJ/nodeProject/vuechat-server
            ./package.json => /home/HHJ/nodeProject/vuechat-server

          # 完成拷贝后在部署服务器执行的命令：进入项目目录，安装生产依赖，并使用 pm2 管理
          last_ssh: |
            cd /home/HHJ/nodeProject/vuechat-server
            npm i --prod
            pm2 reload app.config.js

